// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/upload/cancel": {
            "post": {
                "description": "Cancels an ongoing upload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Upload"
                ],
                "summary": "Cancel Upload",
                "parameters": [
                    {
                        "description": "Cancel upload request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CancelUploadRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CancelUploadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/upload/chunk": {
            "post": {
                "description": "Uploads a single chunk of a file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Upload"
                ],
                "summary": "Upload Chunk",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Upload ID",
                        "name": "upload_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Chunk index",
                        "name": "chunk_index",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "File name",
                        "name": "filename",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Chunk hash",
                        "name": "chunk_hash",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Chunk file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UploadChunkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/upload/complete": {
            "post": {
                "description": "Marks the upload as complete and merges chunks",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Upload"
                ],
                "summary": "Complete Upload",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Upload ID",
                        "name": "upload_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Total chunks",
                        "name": "total_chunks",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "File name",
                        "name": "filename",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CompleteUploadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/upload/status": {
            "get": {
                "description": "Returns the list of already uploaded chunks for a given upload session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Upload"
                ],
                "summary": "Get Upload Status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Upload ID",
                        "name": "upload_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "File name",
                        "name": "filename",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UploadStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Missing parameter",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CancelUploadRequestDTO": {
            "type": "object",
            "properties": {
                "upload_id": {
                    "type": "string"
                }
            }
        },
        "models.CancelUploadResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "opsiyonel açıklama",
                    "type": "string"
                },
                "status": {
                    "description": "örn: \"ok\" veya \"failed\"",
                    "type": "string"
                }
            }
        },
        "models.CompleteUploadResponse": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "missing_chunks": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "models.UploadChunkResponse": {
            "type": "object",
            "properties": {
                "chunk_index": {
                    "type": "integer"
                },
                "filename": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "upload_id": {
                    "type": "string"
                }
            }
        },
        "models.UploadStatusResponse": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "upload_id": {
                    "type": "string"
                },
                "uploaded_chunks": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
